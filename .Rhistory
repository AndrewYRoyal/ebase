propertyTable = data.table(meterID = c('I', 'J', 'L'),
propertyName = rep('Tits', 3),
deemedSavings = rep(0, 3)),
meterTable = unique(sampDT[, .(meterID, inDate, propertyName = rep('Tits', 3))]),
meterLevel = TRUE)
lapply(c('data.table', 'lfe', 'ggplot2', 'xgboost', 'ggthemes'), library, character.only = TRUE)
rm(list = ls())
source('R/mainFunctions.R')
source('R/helperFunctions.R')
#library('ebase')
sampDT <- fread('vignettes/vignetteData.csv')
sampDT[meter == 'J', eventStart:= '2/1/2017']
sampDT[meter == 'J', eventEnd:= '7/1/2017']
# Get model
startTime <- Sys.time()
bList <- baselineModel(dt = sampDT,
id.var = meter,
use.var = electricity,
date.var = date,
hour.var = hour,
temp.var = temperature,
install.date.var = install_date,
base.length = 12,
date.format = '%m/%d/%Y',
include.gboost = FALSE,
nra.start.var = eventStart)
Sys.time() - startTime
# bLi
# Hourly Savings
plot(bList,
type = 'hourlysave',
oHours = c(18, 6),
propertyTable = data.table(meterID = c('I', 'J', 'L'),
propertyName = rep('Tits', 3),
deemedSavings = rep(0, 3)),
meterTable = unique(sampDT[, .(meterID, inDate, propertyName = rep('Tits', 3))]),
meterLevel = TRUE)
lapply(c('data.table', 'lfe', 'ggplot2', 'xgboost', 'ggthemes'), library, character.only = TRUE)
rm(list = ls())
source('R/mainFunctions.R')
source('R/helperFunctions.R')
#library('ebase')
sampDT <- fread('vignettes/vignetteData.csv')
sampDT[meter == 'J', eventStart:= '2/1/2017']
sampDT[meter == 'J', eventEnd:= '7/1/2017']
# Get model
startTime <- Sys.time()
bList <- baselineModel(dt = sampDT,
id.var = meter,
use.var = electricity,
date.var = date,
hour.var = hour,
temp.var = temperature,
install.date.var = install_date,
base.length = 12,
date.format = '%m/%d/%Y',
include.gboost = FALSE,
nra.start.var = eventStart)
Sys.time() - startTime
# Hourly Savings
plot(bList,
type = 'hourlysave',
oHours = c(18, 6),
propertyTable = data.table(meterID = c('I', 'J', 'L'),
propertyName = rep('Tits', 3),
deemedSavings = rep(0, 3)),
meterTable = unique(sampDT[, .(meterID, inDate, propertyName = rep('Tits', 3))]),
meterLevel = TRUE)
library('devtools')
library('roxygen2')
#### Build
document()
build()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
lapply(c('data.table', 'lfe', 'ggplot2'), library, character.only = TRUE)
meterDT <- fread('vignetteData.csv')
source('C:/Users/Andrew/Dropbox/Res-Intel Model/R_Packages/ebase/ebase/R/mainFunctions.R')
source('C:/Users/Andrew/Dropbox/Res-Intel Model/R_Packages/ebase/ebase/R/helperFunctions.R')
meterDT
x <- baselineModel(dt = meterDT,
id.var = meter,
date.var = date,
use.var = electricity,
hour.var = hour,
temp.var = temperature,
install.date.var = install_date)
names(x)
x$predictions
y <- plot(x)
y$L
actual_kWh <- sum(x$predictions[meterID == 'L' & postECM == 1, elct])
predicted_kWh <- sum(x$predictions[meterID == 'L' & postECM == 1, pElct])
saved_kWh <- actual_kWh - predicted_kWh
saved_percent <- 100*saved_kWh/predicted_kWh
saved_kWh
saved_percent
z <- fUncertainty(dt = x$predictions, fSavings = c(0.05, 0.1, 0.15))
names(z)
z$plots$L
# Deprecated
# p <- print_thermalSensitivity(x$thermal, print = TRUE)
# p$J
# p$L
meterDT[meter == 'J', eventStart:= '2/1/2017']
meterDT
#meterDT[meter == 'J', eventStart:= '2/1/2017']
#meterDT[meter == 'J', eventEnd:= '7/1/2017']
(c('data.table', 'lfe', 'ggplot2', 'xgboost', 'ggthemes'), library, character.only = TRUE)
rm(list = ls())
source('R/mainFunctions.R')
source('R/helperFunctions.R')
#library('ebase')
sampDT <- fread('vignettes/vignetteData.csv')
sampDT[meter == 'J', eventStart:= '2/1/2017']
sampDT[meter == 'J', eventEnd:= '7/1/2017']
# Get model
startTime <- Sys.time()
bList <- baselineModel(dt = sampDT,
id.var = meter,
use.var = electricity,
date.var = date,
hour.var = hour,
temp.var = temperature,
install.date.var = install_date,
base.length = 12,
date.format = '%m/%d/%Y',
include.gboost = FALSE,
nra.start.var = eventStart)
Sys.time() - startTime
lapply(c('data.table', 'lfe', 'ggplot2', 'xgboost', 'ggthemes'), library, character.only = TRUE)
rm(list = ls())
source('R/mainFunctions.R')
source('R/helperFunctions.R')
#library('ebase')
sampDT <- fread('vignettes/vignetteData.csv')
sampDT[meter == 'J', eventStart:= '2/1/2017']
sampDT[meter == 'J', eventEnd:= '7/1/2017']
# Get model
startTime <- Sys.time()
bList <- baselineModel(dt = sampDT,
id.var = meter,
use.var = electricity,
date.var = date,
hour.var = hour,
temp.var = temperature,
install.date.var = install_date,
base.length = 12,
date.format = '%m/%d/%Y',
include.gboost = FALSE,
nra.start.var = eventStart)
Sys.time() - startTime
sampDT
lapply(c('data.table', 'lfe', 'ggplot2', 'xgboost', 'ggthemes'), library, character.only = TRUE)
rm(list = ls())
source('R/mainFunctions.R')
source('R/helperFunctions.R')
#library('ebase')
sampDT <- fread('vignettes/vignetteData.csv')
sampDT[meter == 'J', eventStart:= '2/1/2017']
sampDT[meter == 'J', eventEnd:= '7/1/2017']
# Get model
startTime <- Sys.time()
bList <- baselineModel(dt = sampDT,
id.var = meter,
use.var = electricity,
date.var = date,
hour.var = hour,
temp.var = temperature,
install.date.var = install_date,
base.length = 12,
date.format = '%m/%d/%Y',
include.gboost = FALSE,
nra.start.var = eventStart)
Sys.time() - startTime
sampDT
library('devtools')
library('roxygen2')
#### Build
document()
build()
lapply(c('data.table', 'lfe', 'ggplot2', 'xgboost', 'ggthemes'), library, character.only = TRUE)
rm(list = ls())
source('R/mainFunctions.R')
source('R/helperFunctions.R')
#library('ebase')
sampDT <- fread('vignettes/vignetteData.csv')
sampDT[meter == 'J', eventStart:= '2/1/2017']
sampDT[meter == 'J', eventEnd:= '7/1/2017']
# Get model
startTime <- Sys.time()
bList <- baselineModel(dt = sampDT,
id.var = meter,
use.var = electricity,
date.var = date,
hour.var = hour,
temp.var = temperature,
install.date.var = install_date,
base.length = 12,
date.format = '%m/%d/%Y',
include.gboost = FALSE,
nra.start.var = eventStart)
Sys.time() - startTime
# bList$predictions[baseline == 0, sum(elct - pElct)/sum(pElct), by = 'meterID']
# summary(bList)
plot(bList,
type = 'hourlysave',
oHours = c(18, 6),
propertyTable = data.table(meterID = c('I', 'J', 'L'),
propertyName = rep('Tits', 3),
deemedSavings = rep(0, 3)),
meterTable = unique(sampDT[, .(meterID, inDate, propertyName = rep('Tits', 3))]),
meterLevel = TRUE)
sampDT
meterDT <- unique(sampDT[, .(meterID = meter, inDate, propertyName = rep('Tits', 3))])
meterDT <- unique(sampDT[, .(meterID = meter, inDate = install_date, propertyName = rep('Tits', 3))])
meterDT
meterDT[, inDate:= as.POSIXct(install_date, tz = 'UTC', format = '%m/%d/%Y')]
meterDT[, inDate:= as.POSIXct(inDate, tz = 'UTC', format = '%m/%d/%Y')]
# Hourly Savings
plot(bList,
type = 'hourlysave',
oHours = c(18, 6),
propertyTable = data.table(meterID = c('I', 'J', 'L'),
propertyName = rep('Tits', 3),
deemedSavings = rep(0, 3)),
meterTable = meterDT,
meterLevel = TRUE)
library('devtools')
library('roxygen2')
#### Build
document()
build()
# ! using GUI: build -> Install and Restart
#### Test
# library(ebase)
# lapply(c('data.table', 'lfe', 'ggplot2', 'xgboost'), library, character.only = TRUE)
#
# useDT <- fread('vignettes/vignetteData.csv')
# useDT <- baselineModel(dt = useDT, id.var = meter,
#                        date.var = date,
#                        use.var = electricity,
#                        hour.var = hour,
#                        temp.var = temperature,
#                        install.date.var = install_date,
#                        base.length = 24,
#                        include.gboost = TRUE)
#
# min(useDT$predictions[, date])
#### Instructions to install elsewhere:
# install.packages('~/ebase_0.1.0.tar.gz', type = 'source', repos = NULL)
library('devtools')
library('roxygen2')
#### Build
document()
build()
#### Instructions to install elsewhere:
# install.packages('~/ebase_0.1.0.tar.gz', type = 'source', repos = NULL)
lapply(c('data.table', 'lfe', 'ggplot2', 'xgboost', 'ggthemes'), library, character.only = TRUE)
rm(list = ls())
source('R/mainFunctions.R')
source('R/helperFunctions.R')
#library('ebase')
sampDT <- fread('vignettes/vignetteData.csv')
sampDT[meter == 'J', eventStart:= '2/1/2017']
sampDT[meter == 'J', eventEnd:= '7/1/2017']
# Get model
startTime <- Sys.time()
bList <- baselineModel(dt = sampDT,
id.var = meter,
use.var = electricity,
date.var = date,
hour.var = hour,
temp.var = temperature,
install.date.var = install_date,
base.length = 12,
date.format = '%m/%d/%Y',
include.gboost = FALSE,
nra.start.var = eventStart)
Sys.time() - startTime
# bList$predictions[baseline == 0, sum(elct - pElct)/sum(pElct), by = 'meterID']
# summary(bList)
Cumulative Savings
plot(bList,
type = 'dailysave',
propertyTable = data.table(meterID = c('I', 'J', 'L'),
propertyName = rep('Tits', 3),
deemedSavings = rep(0, 3)),
meterTable = unique(sampDT[, .(meterID, inDate, propertyName = rep('Tits', 3))]),
meterLevel = TRUE)
lapply(c('data.table', 'lfe', 'ggplot2', 'xgboost', 'ggthemes'), library, character.only = TRUE)
rm(list = ls())
source('R/mainFunctions.R')
source('R/helperFunctions.R')
#library('ebase')
sampDT <- fread('vignettes/vignetteData.csv')
sampDT[meter == 'J', eventStart:= '2/1/2017']
sampDT[meter == 'J', eventEnd:= '7/1/2017']
# Get model
startTime <- Sys.time()
bList <- baselineModel(dt = sampDT,
id.var = meter,
use.var = electricity,
date.var = date,
hour.var = hour,
temp.var = temperature,
install.date.var = install_date,
base.length = 12,
date.format = '%m/%d/%Y',
include.gboost = FALSE,
nra.start.var = eventStart)
Sys.time() - startTime
# bList$predictions[baseline == 0, sum(elct - pElct)/sum(pElct), by = 'meterID']
# summary(bList)
#Cumulative Savings
plot(bList,
type = 'dailysave',
propertyTable = data.table(meterID = c('I', 'J', 'L'),
propertyName = rep('Tits', 3),
deemedSavings = rep(0, 3)),
meterTable = unique(sampDT[, .(meterID, inDate, propertyName = rep('Tits', 3))]),
meterLevel = TRUE)
lapply(c('data.table', 'lfe', 'ggplot2', 'xgboost', 'ggthemes'), library, character.only = TRUE)
rm(list = ls())
source('R/mainFunctions.R')
source('R/helperFunctions.R')
#library('ebase')
sampDT <- fread('vignettes/vignetteData.csv')
sampDT[meter == 'J', eventStart:= '2/1/2017']
sampDT[meter == 'J', eventEnd:= '7/1/2017']
# Get model
startTime <- Sys.time()
bList <- baselineModel(dt = sampDT,
id.var = meter,
use.var = electricity,
date.var = date,
hour.var = hour,
temp.var = temperature,
install.date.var = install_date,
base.length = 12,
date.format = '%m/%d/%Y',
include.gboost = FALSE,
nra.start.var = eventStart)
Sys.time() - startTime
# bList$predictions[baseline == 0, sum(elct - pElct)/sum(pElct), by = 'meterID']
# summary(bList)
#Cumulative Savings
plot(bList,
type = 'dailysave',
propertyTable = data.table(meterID = c('I', 'J', 'L'),
propertyName = rep('Tits', 3),
deemedSavings = rep(0, 3)),
meterTable = unique(sampDT[, .(meterID, inDate, propertyName = rep('Tits', 3))]),
meterLevel = TRUE)
#Cumulative Savings
plot(bList,
type = 'dailysave',
propertyTable = data.table(meterID = c('I', 'J', 'L'),
propertyName = rep('Tits', 3),
deemedSavings = rep(0, 3)),
meterTable = unique(sampDT[, .(meterID, inDate, propertyName = rep('Tits', 3))]),
meterLevel = TRUE)
sampDT
plot(bList,
type = 'dailysave',
propertyTable = data.table(meterID = c('I', 'J', 'L'),
propertyName = rep('Tits', 3),
deemedSavings = rep(0, 3)),
meterTable = unique(sampDT[, .(meterID = meter, inDate, propertyName = rep('Tits', 3))]),
meterLevel = TRUE)
#Cumulative Savings
plot(bList,
type = 'dailysave',
propertyTable = data.table(meterID = c('I', 'J', 'L'),
propertyName = rep('Tits', 3),
deemedSavings = rep(0, 3)),
meterTable = unique(sampDT[, .(meterID = meter, inDate = install_date, propertyName = rep('Tits', 3))]),
meterLevel = TRUE)
meterDT <- unique(sampDT[, .(meterID = meter, inDate = install_date, propertyName = rep('Tits', 3))])
meterDT[, inDate:= as.POSIXct(inDate, tz = 'UTC', format = '%m/%d/%Y')]
#Cumulative Savings
plot(bList,
type = 'dailysave',
propertyTable = data.table(meterID = c('I', 'J', 'L'),
propertyName = rep('Tits', 3),
deemedSavings = rep(0, 3)),
meterTable = meterDT,
meterLevel = TRUE)
library('devtools')
library('roxygen2')
#### Build
document()
build()
#### Instructions to install elsewhere:
# install.packages('~/ebase_0.1.0.tar.gz', type = 'source', repos = NULL)
lapply(c('data.table', 'lfe', 'ggplot2', 'xgboost', 'ggthemes'), library, character.only = TRUE)
rm(list = ls())
source('R/mainFunctions.R')
source('R/helperFunctions.R')
#library('ebase')
sampDT <- fread('vignettes/vignetteData.csv')
sampDT[meter == 'J', eventStart:= '2/1/2017']
sampDT[meter == 'J', eventEnd:= '7/1/2017']
# Get model
startTime <- Sys.time()
bList <- baselineModel(dt = sampDT,
id.var = meter,
use.var = electricity,
date.var = date,
hour.var = hour,
temp.var = temperature,
install.date.var = install_date,
base.length = 12,
date.format = '%m/%d/%Y',
include.gboost = FALSE,
nra.start.var = eventStart)
Sys.time() - startTime
# bList$predictions[baseline == 0, sum(elct - pElct)/sum(pElct), by = 'meterID']
summary(bList)
# Get model
startTime <- Sys.time()
bList <- baselineModel(dt = sampDT,
id.var = meter,
use.var = electricity,
date.var = date,
hour.var = hour,
temp.var = temperature,
install.date.var = install_date,
base.length = 12,
date.format = '%m/%d/%Y',
include.gboost = TRUE,
nra.start.var = eventStart)
Sys.time() - startTime
# bList$predictions[baseline == 0, sum(elct - pElct)/sum(pElct), by = 'meterID']
summary(bList)
lapply(c('data.table', 'lfe', 'ggplot2', 'xgboost', 'ggthemes'), library, character.only = TRUE)
rm(list = ls())
source('R/mainFunctions.R')
source('R/helperFunctions.R')
#library('ebase')
sampDT <- fread('vignettes/vignetteData.csv')
sampDT[meter == 'J', eventStart:= '2/1/2017']
sampDT[meter == 'J', eventEnd:= '7/1/2017']
# Get model
startTime <- Sys.time()
bList <- baselineModel(dt = sampDT,
id.var = meter,
use.var = electricity,
date.var = date,
hour.var = hour,
temp.var = temperature,
install.date.var = install_date,
base.length = 12,
date.format = '%m/%d/%Y',
include.gboost = TRUE,
nra.start.var = eventStart)
Sys.time() - startTime
# bList$predictions[baseline == 0, sum(elct - pElct)/sum(pElct), by = 'meterID']
summary(bList)
lapply(c('data.table', 'lfe', 'ggplot2', 'xgboost', 'ggthemes'), library, character.only = TRUE)
rm(list = ls())
source('R/mainFunctions.R')
source('R/helperFunctions.R')
#library('ebase')
sampDT <- fread('vignettes/vignetteData.csv')
sampDT[meter == 'J', eventStart:= '2/1/2017']
sampDT[meter == 'J', eventEnd:= '7/1/2017']
# Get model
startTime <- Sys.time()
bList <- baselineModel(dt = sampDT,
id.var = meter,
use.var = electricity,
date.var = date,
hour.var = hour,
temp.var = temperature,
install.date.var = install_date,
base.length = 12,
date.format = '%m/%d/%Y',
include.gboost = TRUE,
nra.start.var = eventStart)
Sys.time() - startTime
# bList$predictions[baseline == 0, sum(elct - pElct)/sum(pElct), by = 'meterID']
summary(bList)
?devtools::install_github
library('devtools')
install_github(
repo = 'aroyal641/ebase')
install_github(
repo = 'aroyal641/ebase',
auth_token = 'd2b68cbc66e8a09381fe7f8f722f10954eb07611')
library(rsconnect)
appDependencies('C:/Users/Andrew/Dropbox/Web Application/NMEC-ShinyApp/appDeploy')
remove.packages(pkgs, lib)
?remove.packages(pkgs, lib)
remove.packages('ebase')
library('ebase')
install_github(
repo = 'aroyal641/ebase',
auth_token = 'd2b68cbc66e8a09381fe7f8f722f10954eb07611')
appDependencies('C:/Users/Andrew/Dropbox/Web Application/NMEC-ShinyApp/appDeploy')
setAccountInfo(
name='res-intel',
token='A1F021640FD492B71A4D6B71A2824C59',
secret='6G7AuHwzmKDgVbsiGlp2NvRHMRSITC2wzohJf+hL')
deployApp(
appDir = 'C:/Users/Andrew/Dropbox/Web Application/NMEC-ShinyApp/appDeploy',
appTitle = 'mfhopps',
logLevel = 'verbose')
Y
getwd()
